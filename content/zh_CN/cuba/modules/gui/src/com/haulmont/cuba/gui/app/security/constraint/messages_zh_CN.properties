type = 类型
notification.error = 错误
whereClauseHelp = 使用“和”条件将此字段的值添加到“where”查询子句。 “where”字不需要，因为它将被自动添加。<br> \
testConstraint = 测试约束
<br> <code>{E}.createdBy = 
groovyScript = Groovy脚本
joinClause = 加入条款
notification.syntaxErrors = 解析'where'和'join'子句时发现语法错误：<br>％s
whereClause = 条款的地方
groovyScriptHelp = 在这里，您可以为所选实体类型和所选操作类型的条件设置Groovy脚本。
notification.success = 约束在语法上是正确的
wizard = 约束向导
caption = '$ {ITEM.group.name}'组的约束
<code>{E}.createdBy = ：session $ userLogin和s.code
notification.runtimeError = 运行结果查询时发生错误。<br> <br>％s
code = 码
notification.scriptCompilationError = 编译Groovy脚本时出现错误。<br> <br>％s
entityName = 实体名称
joinClauseHelp = 该字段的值将添加到“from”查询子句中。它应以逗号开头，“加入”或“左连接”。<br> \
notification.entityIsEmpty = 请选择实体名称